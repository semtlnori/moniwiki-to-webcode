[[[[TableOfContents]]]]
=== 스펙/설계 ===
==== 설치 ====
* 사용자는 nFORGE 패키지의 압축을 풀고, 인스톨러를 한번 실행하는 것으로 nFORGE를 설치할 수 있다.
* 설치는 사용자가 nFORGE 패키지의 압축을 풀어 놓은 디렉토리에서 이루어진다.
* 옵션으로, 혹은 대화형으로 설치에 필요한 값들을 사용자로부터 입력받는다.
** 사용할 DBMS를 선택함
*** 선택한 DBMS가 PHP에서 사용할 수 있도록 설치되어 있는지 확인. 만약 설치되어 있지 않다면,
**** pgsql, mysql의 경우 자동 설치
**** cubrid의 경우 설치되어 있지 않다는 메시지를 내보냄. 사용자는 재선택하거나 설치를 중단할 수 있다.
*** DB서버에 원격으로 연결해야 하는지 물어보고(디폴트: no), 그러한 경우 DB서버의 IP와 포트번호를 입력받음
*** DB이름(디폴트: nforge), DB유저(디폴트: nforge), DB비밀번호 정보를 입력받음
**** 같은 이름의 DB가 존재하는지 확인. 존재하는 경우 해당 DB가 nFORGE의 DB인지 유저 계정/스키마를 검사하여 맞다고 생각되면 사용자에게 이 DB를 사용할 것인지 묻고, 동의하면 이 DB를 nFORGE의 DB로 사용, 아니면 정보 재입력 요구
***** 이 DB에 nFORGE 설정이 존재하는 경우, 이 설정을 이후 유저에게 물어볼 값의 디폴트로 사용함
**** 사용할 VCS를 입력받음 (디폴트: svn)
**** nFORGE를 설치할 디렉토리 경로를 입력받음 (디폴트: /opt/nforge)
***** 설치 가능한 경로인지 확인 (권한, 디스크 공간 등)
**** 배포판을 선택함 (디폴트: 사용자의 시스템에 설치된 배포판을 autodetect한 값. 확실하지 않다면 디폴트값을 셋팅하지 않음)
***** 해당 배포판용 패키지 설치 도구가 있는지 확인
**** 아파치 유저, 그룹 이름을 입력받음 (디폴트: 배포판에 따른 디폴트 유저/그룹)
**** 도메인 네임을 입력받음
**** 서비스 이름을 입력받음
**** 관리자 아이디(디폴트: nforgeadmin), 관리자 비밀번호, 관리자 메일 주소를 입력받음
**** 로케일 정보(언어, timezone)를 입력받음 (디폴트: 시스템과 같게)
*** 사용자가 입력한 값을 검사하여 올바르지 않은 경우에는 재입력을 요구한다. (옵션에 따라 재입력 없이 바로 종료하도록 할 수 있음) 대화형으로 입력하거나, 옵션으로 입력하거나 모두 공통으로 적용된다.
*** 실제 설치 작업 수행
**** 배포판에 맞게 패키지 설치: httpd, php, cvs, perl-URI, subversion, mod_dav_svn, postfix, rcs, php-gd, php-mbstring, mod_ssl, wget, ssh, inetd, **python**
***** VCS의 버전 검사(svn은 1.2.3, cvs는 1.11 이상이어야 함)
**** DB가 생성되지 않은 경우, DB생성
**** 해당 디렉토리에 nFORGE 관련 파일 모두 복사
**** nFORGE 접근 권한 설정 작업 수행
**** 도메인 네임 및 기타 아파치 설정 작업 수행
**** 설치 중 획득한 정보를 nFORGE 설정으로 저장한다. DB 접속 정보는 파일로, 그 외에는 DB에 저장한다.
***** 환경 설정 필드 구성: 변수명, 값, 설명 (설명 필드는 DB에 직접 접근해서 설정을 수정하려는 사용자에게 환경 설정에 대한 도움말을 제공해 주기 위해 필요한 것)
**** 설치한 파일들의 목록과 MD5체크섬을 보존한다. (이후 삭제시를 위한 것)
**** crontab에 nFORGE 스케쥴러 추가
**** 아파치 재시작
*** 설치 과정에서 문제가 발생하면 실패 원인과 해결방안에 대한 안내 메시지를 제공하고, 실패한 작업을 롤백하여 해당 단계 직전 상태로 돌려놓는다. 추후 다시 재설치하는 경우 이 단계에서 다시 시작하거나, 사용자가 원하는 경우 완전히 삭제하고 처음부터 다시 설치할 수 있다. 이 때 삭제 작업은 아래의 '삭제' 항목과 같이 동작한다.
*** 설치 완료 후 시작방법을 안내한다
**** nFORGE 접속 URL, 관리자 아이디
**** 정상적으로 웹페이지가 나타나지 않을 경우, nFORGE 삭제 후 재설치를 하도록 안내한다.
==== 정상 동작 확인 ====
* nFORGE에 최초 접속했을 때, 자동으로 정상 동작 여부를 체크하여 알려준다. 만약 문제가 발생한다면 다음번 접속할 때도 정상 동작 체크 여부를 확인한다. 문제점들에 대한 구체적인 정보는 관리자에게 메일로 발송하고, 동시에 nFORGE를 설치한 디렉토리에 파일로 저장한다.
** 웹을 통해 DB에 정상적으로 접근할 수 있는지 확인
** 아파치/PHP 모듈의 정상 설치 여부 확인: mod_dav_svn(svn의 경우), mod_authz_svn(svn의 경우), mod_rewrite 등
** 서버 시스템 시간이 사용자가 설정한 timezone의 시간과 일치하는지 확인
** nFORGE에 접속한 클라이언트에 정상적으로 쿠키가 남는지 확인
** 메일 발송이 정상적으로 이루어지고 있는지 확인
** 스케쥴러와 스케쥴러가 수행하도록 하는 작업들이 정상적으로 동작하고 있는지 확인
** 업로드/위키/백업/저장소 디렉토리에 대한 접근(쓰기) 권한 확인
* 관리자는 위와 같은 정상 동작 확인을 이후에 관리자 페이지를 통해서 수행할 수 있다.
 
==== 삭제 ====
* 사용자는 언인스톨러를 실행해서 nFORGE를 삭제할 수 있다.
* 언인스톨러는 nFORGE를 설치한 디렉토리에서, 인스톨러가 설치했던 파일들을 삭제한다. 만약에 인스톨러가 설치했던 파일과 같은 이름의 파일이 있지만 다른 파일로 판단된다면 사용자에게 삭제할 것인지 확인받고 삭제한다. (MD5 체크섬 비교)
* DB와 저장소의 경우, 항상 사용자의 동의를 받고 삭제한다. 만약 설치한 직후에 수정이 가해진 일이 있다면 그에 대한 경고 메시지도 첨부하며, 명시적인 동의를 얻은 경우에만 삭제한다. (디폴트를 '삭제하지 않음'으로 설정) 
* 삭제 실패시 실패 원인을 알려준 뒤, 삭제해야 할 파일들이 남아있는지 확인하고 남아있다면 해당 파일들의 목록을 제시하고 수동 삭제를 권고한다.
* 사용자가 생성한 데이터/설정은 삭제하지 않으며, 사용자가 스스로 삭제할 수 있도록 안내만 한다.
* 패키지로 설치한 것은 삭제하지 않는다. (삭제할지의 여부를 정확하게 판단하지 못한다면, 사용자가 원하지 않는 삭제를 하게 될 가능성이 있음)

=== 기존 nFORGE 인스톨러와의 차이점 ===
* 커맨드 라인 상에서 한 번의 스크립트 실행으로 전 인스톨 과정 수행. 웹페이지를 통해 추가로 입력해야 하는 것은 없음
* 사용자의 편의를 위해 설치에 필요한 정보들을 대화형으로 입력받으며, 최대한 적절하게 디폴트값을 제시
* 설치 진행 상황을 기억하며, 설치가 중단된 후 다시 설치할 때 중단한 지점에서 재시작. (혹은 언인스톨러로 완전히 삭제하고 다시 설치 가능)
* 언인스톨시 MD5 체크섬을 이용해서 사용자가 수정/추가한 파일은 삭제하지 않고 알려줌
* 최초 시작시 정상 동작 여부를 체크하며, 상세한 체크 결과는 보안상 웹으로 바로 출력하지 않고 관리자 메일로 발송
* 환경 설정 파일에는 DB 접속 정보만 담겨 있으며, 그 외의 설정 정보는 모두 DB에 기록하여, 환경 설정의 수정/추가/삭제를 웹페이지 상에서 간단히 할 수 있음
* cron을 통해 실행하던 작업을 별도의 스케쥴러를 통해 동작하도록 수정하며, 이 스케쥴러만 cron으로 동작하도록 한다.

=== 스펙이나 설계에 반영했으면 하는것 ===
* 웹인스톨 또는 헬스 체커
** 아파치/PHP 모듈의 정상 설치 여부 확인
** 서버/클라이언트 시스템 Time
** 쿠키 적용 여부
** DB 정상 접속 여부
** 메일 정상 가동 여부
** CRON 설정 여부(?)
** SCM 버전 및 설치 여부
** Python등 도구의 설치 여부
** 업로드 및 위키, 백업, SCM Repository등에 대한 접근 가능 여부(쓰기 권한등 확인)
* CRON을 스케쥴러로 대치
** CRON 항목으로 백 그라운드 항목을 일일이 설정하는 것이 아니라, 하나의 스케쥴러를 호출하게 하고 해당 스케쥴러에서 DB에 저장한(관리 가능) 항목들을 실행하는 방법이 어떨까 합니다.
** 이렇게 하면 배치 작업을 특정 이벤트에 따라 수행하게도 할 수 있을것 같습니다.
* smrsh에 php 를 추가하는 작업도 필용합니다(2/27) ln -s /usr/bin/php /etc/smrsh/php
